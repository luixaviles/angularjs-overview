// This file was generated by modules-webmake (modules for web) project.
// See: https://github.com/medikoo/modules-webmake

(function (modules) {
	'use strict';

	var resolve, getRequire, wmRequire, notFoundError, findFile
	  , extensions = {".js":[],".json":[],".css":[],".html":[]}
	  , envRequire = typeof require === 'function' ? require : null;

	notFoundError = function (path) {
		var error = new Error("Could not find module '" + path + "'");
		error.code = 'MODULE_NOT_FOUND';
		return error;
	};
	findFile = function (scope, name, extName) {
		var i, ext;
		if (typeof scope[name + extName] === 'function') return name + extName;
		for (i = 0; (ext = extensions[extName][i]); ++i) {
			if (typeof scope[name + ext] === 'function') return name + ext;
		}
		return null;
	};
	resolve = function (scope, tree, path, fullPath, state, id) {
		var name, dir, exports, module, fn, found, ext;
		path = path.split(/[\\/]/);
		name = path.pop();
		if ((name === '.') || (name === '..')) {
			path.push(name);
			name = '';
		}
		while ((dir = path.shift()) != null) {
			if (!dir || (dir === '.')) continue;
			if (dir === '..') {
				scope = tree.pop();
				id = id.slice(0, id.lastIndexOf('/'));
			} else {
				tree.push(scope);
				scope = scope[dir];
				id += '/' + dir;
			}
			if (!scope) throw notFoundError(fullPath);
		}
		if (name && (typeof scope[name] !== 'function')) {
			found = findFile(scope, name, '.js');
			if (!found) found = findFile(scope, name, '.json');
			if (!found) found = findFile(scope, name, '.css');
			if (!found) found = findFile(scope, name, '.html');
			if (found) {
				name = found;
			} else if ((state !== 2) && (typeof scope[name] === 'object')) {
				tree.push(scope);
				scope = scope[name];
				id += '/' + name;
				name = '';
			}
		}
		if (!name) {
			if ((state !== 1) && scope[':mainpath:']) {
				return resolve(scope, tree, scope[':mainpath:'], fullPath, 1, id);
			}
			return resolve(scope, tree, 'index', fullPath, 2, id);
		}
		fn = scope[name];
		if (!fn) throw notFoundError(fullPath);
		if (fn.hasOwnProperty('module')) return fn.module.exports;
		exports = {};
		fn.module = module = { exports: exports, id: id + '/' + name };
		fn.call(exports, exports, module, getRequire(scope, tree, id));
		return module.exports;
	};
	wmRequire = function (scope, tree, fullPath, id) {
		var name, path = fullPath, t = fullPath.charAt(0), state = 0;
		if (t === '/') {
			path = path.slice(1);
			scope = modules['/'];
			if (!scope) {
				if (envRequire) return envRequire(fullPath);
				throw notFoundError(fullPath);
			}
			id = '/';
			tree = [];
		} else if (t !== '.') {
			name = path.split('/', 1)[0];
			scope = modules[name];
			if (!scope) {
				if (envRequire) return envRequire(fullPath);
				throw notFoundError(fullPath);
			}
			id = name;
			tree = [];
			path = path.slice(name.length + 1);
			if (!path) {
				path = scope[':mainpath:'];
				if (path) {
					state = 1;
				} else {
					path = 'index';
					state = 2;
				}
			}
		}
		return resolve(scope, tree, path, fullPath, state, id);
	};
	getRequire = function (scope, tree, id) {
		return function (path) {
			return wmRequire(scope, [].concat(tree), path, id);
		};
	};
	return getRequire(modules, [], '');
})({
	"bespoke": {
		":mainpath:": "./lib/bespoke.js",
		"lib": {
			"bespoke.js": function (exports, module, require) {
				var from = function(opts, plugins) {
				  var parent = (opts.parent || opts).nodeType === 1 ? (opts.parent || opts) : document.querySelector(opts.parent || opts),
				    slides = [].filter.call(typeof opts.slides === 'string' ? parent.querySelectorAll(opts.slides) : (opts.slides || parent.children), function(el) { return el.nodeName !== 'SCRIPT'; }),
				    activeSlide = slides[0],
				    listeners = {},

				    activate = function(index, customData) {
				      if (!slides[index]) {
				        return;
				      }

				      fire('deactivate', createEventData(activeSlide, customData));
				      activeSlide = slides[index];
				      fire('activate', createEventData(activeSlide, customData));
				    },

				    slide = function(index, customData) {
				      if (arguments.length) {
				        fire('slide', createEventData(slides[index], customData)) && activate(index, customData);
				      } else {
				        return slides.indexOf(activeSlide);
				      }
				    },

				    step = function(offset, customData) {
				      var slideIndex = slides.indexOf(activeSlide) + offset;

				      fire(offset > 0 ? 'next' : 'prev', createEventData(activeSlide, customData)) && activate(slideIndex, customData);
				    },

				    on = function(eventName, callback) {
				      (listeners[eventName] || (listeners[eventName] = [])).push(callback);
				      return off.bind(null, eventName, callback);
				    },

				    off = function(eventName, callback) {
				      listeners[eventName] = (listeners[eventName] || []).filter(function(listener) { return listener !== callback; });
				    },

				    fire = function(eventName, eventData) {
				      return (listeners[eventName] || [])
				        .reduce(function(notCancelled, callback) {
				          return notCancelled && callback(eventData) !== false;
				        }, true);
				    },

				    createEventData = function(el, eventData) {
				      eventData = eventData || {};
				      eventData.index = slides.indexOf(el);
				      eventData.slide = el;
				      return eventData;
				    },

				    deck = {
				      on: on,
				      off: off,
				      fire: fire,
				      slide: slide,
				      next: step.bind(null, 1),
				      prev: step.bind(null, -1),
				      parent: parent,
				      slides: slides
				    };

				  (plugins || []).forEach(function(plugin) {
				    plugin(deck);
				  });

				  activate(0);

				  return deck;
				};

				module.exports = {
				  from: from
				};
			}
		}
	},
	"bespoke-classes": {
		":mainpath:": "./lib/bespoke-classes.js",
		"lib": {
			"bespoke-classes.js": function (exports, module, require) {
				module.exports = function() {
				  return function(deck) {
				    var addClass = function(el, cls) {
				        el.classList.add('bespoke-' + cls);
				      },

				      removeClass = function(el, cls) {
				        el.className = el.className
				          .replace(new RegExp('bespoke-' + cls +'(\\s|$)', 'g'), ' ')
				          .trim();
				      },

				      deactivate = function(el, index) {
				        var activeSlide = deck.slides[deck.slide()],
				          offset = index - deck.slide(),
				          offsetClass = offset > 0 ? 'after' : 'before';

				        ['before(-\\d+)?', 'after(-\\d+)?', 'active', 'inactive'].map(removeClass.bind(null, el));

				        if (el !== activeSlide) {
				          ['inactive', offsetClass, offsetClass + '-' + Math.abs(offset)].map(addClass.bind(null, el));
				        }
				      };

				    addClass(deck.parent, 'parent');
				    deck.slides.map(function(el) { addClass(el, 'slide'); });

				    deck.on('activate', function(e) {
				      deck.slides.map(deactivate);
				      addClass(e.slide, 'active');
				      removeClass(e.slide, 'inactive');
				    });
				  };
				};
			}
		}
	},
	"bespoke-history": {
		"index.js": function (exports, module, require) {
			'use strict';

			module.exports = function (/* options*/) {
				var options = arguments[0], root;

				if (typeof options === 'string') {
					root = options;
				} else {
					options = Object(options);
					root = options.root || '/';
				}

				return function (deck) {
					var update, activateSlide;

					activateSlide = function (index) {
						if (index === deck.slide()) return;
						deck.slide(index);
					};

					update = function (e) {
						var id = location.pathname.slice(root.length, -1);

						if (!id) return;
						if (isNaN(id)) {
							deck.slides.some(function (slide, i) {
								if (slide.getAttribute('data-bespoke-id') === id) {
									activateSlide(i);
									return true;
								}
								if (slide.id === id) {
									activateSlide(i);
									return true;
								}
								return false;
							});
							return;
						}
						activateSlide(Number(id));
					};

					setTimeout(function () {
						update();
						var first = deck.slides[0].getAttribute('data-bespoke-id') || '1';
						deck.on('activate', function (e) {
							var urlSearch = location.search
							  , slideName = e.slide.getAttribute('data-bespoke-id') || e.slide.id ||
									String(e.index + 1);
							history.pushState({}, '', root +
								((slideName === first) ? '' : (slideName + '/')) + urlSearch);
						});

						window.addEventListener('popstate', update);
					}, 0);
				};
			};
		}
	},
	"bespoke-keys": {
		":mainpath:": "./lib/bespoke-keys.js",
		"lib": {
			"bespoke-keys.js": function (exports, module, require) {
				module.exports = function(options) {
				  return function(deck) {
				    var isHorizontal = options !== 'vertical';

				    document.addEventListener('keydown', function(e) {
				      if (e.which == 34 || // PAGE DOWN
				        (e.which == 32 && !e.shiftKey) || // SPACE WITHOUT SHIFT
				        (isHorizontal && e.which == 39) || // RIGHT
				        (!isHorizontal && e.which == 40) // DOWN
				      ) { deck.next(); }

				      if (e.which == 33 || // PAGE UP
				        (e.which == 32 && e.shiftKey) || // SPACE + SHIFT
				        (isHorizontal && e.which == 37) || // LEFT
				        (!isHorizontal && e.which == 38) // UP
				      ) { deck.prev(); }
				    });
				  };
				};
			}
		}
	},
	"bespoke-notes": {
		"index.js": function (exports, module, require) {
			'use strict';

			var primitiveSet = require('es5-ext/object/primitive-set')
			  , parse        = require('querystring/decode')
			  , stringify    = require('querystring/encode')
			  , loadCss      = require('webmake/lib/browser/load-css')

			  , ignoredContexts = primitiveSet('input', 'select', 'textarea')
			  , resolveQuery, invokeResize;

			require('./style');

			resolveQuery = function (token) {
				var value;
				if (!location.search) return null;
				value = parse(location.search.slice(1))[token];
				if (value == null) return null;
				if (!value) return true;
				return Boolean(Number(value));
			};

			invokeResize = function () {
				var event = document.createEvent('HTMLEvents');
				event.initEvent('resize', true, true);
				window.dispatchEvent(event);
			};

			module.exports = function (/*options*/) {
				var options = Object(arguments[1])
				  , visible = Boolean(options.visible)
				  , key = options.key || 0x4e // 'n' key
				  , slideWidth = options.slideWidth
				  , queryToken = 'notes';

				if (options.queryToken === false) queryToken = null;
				else if (options.queryToken && (options.queryToken !== true)) queryToken = options.queryToken;

				return function (deck) {
					var update, current, resolvedQuery;

					if (queryToken) {
						resolvedQuery = resolveQuery(queryToken);
						if (resolvedQuery != null) visible = resolvedQuery;
						window.addEventListener('popstate', function () {
							update(Boolean(resolveQuery(queryToken)));
						});
					}
					if (!isNaN(slideWidth) && (slideWidth > 0)) {
						loadCss('body.notes .bespoke-slide {' +
							'width: ' + (slideWidth * 2) + 'px;' +
							'margin-left: -' + slideWidth + 'px;' +
							'}' +
							'body.notes .bespoke-slide > div.content,' +
							'body.notes .bespoke-slide > aside {' +
							'width: ' + (slideWidth - 40) + 'px;' +
							'}');
					}

					update = function (visible) {
						var query, search, url;
						if (current === visible) return;
						current = visible;
						if (visible) document.body.classList.add('notes');
						else document.body.classList.remove('notes');
						if (!queryToken) return;
						url = location.pathname;
						if (location.search) query = parse(location.search.slice(1));
						else query = {};
						if (visible) query[queryToken] = null;
						else delete query[queryToken];
						search = stringify(query);
						if (search) url += '?' + search.replace(/(?:=&)/g, '&').replace(/\=$/, '');
						if (location.hash) url += location.hash;
						history.pushState({}, '', url);
						invokeResize();
					};

					document.addEventListener('keydown', function (e) {
						if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return;
						if (e.which !== key) return;
						if (ignoredContexts[e.srcElement.nodeName.toLowerCase()]) return;
						e.preventDefault();

						update(!current);
					}, false);

					update(visible);
				};
			};
		},
		"style.css": function (exports, module, require) {
			require('webmake/lib/browser/load-css.js')("/* Notes hidden */\naside { display: none; }\n\n/* Notes exposed */\nbody.notes aside { display: block; }\n\nbody.notes .bespoke-slide {\n\twidth: 1600px;\n\tmargin-left: -800px;\n}\nbody.notes .bespoke-slide > div.content, body.notes .bespoke-slide > aside {\n\twidth: 760px;\n}\nbody.notes .bespoke-slide > aside {\n\tmargin-left: 40px;\n}");
		}
	},
	"bespoke-progress": {
		":mainpath:": "./lib/bespoke-progress.js",
		"lib": {
			"bespoke-progress.js": function (exports, module, require) {
				module.exports = function(options) {
				  return function (deck) {
				    var progressParent = document.createElement('div'),
				      progressBar = document.createElement('div'),
				      prop = options === 'vertical' ? 'height' : 'width';

				    progressParent.className = 'bespoke-progress-parent';
				    progressBar.className = 'bespoke-progress-bar';
				    progressParent.appendChild(progressBar);
				    deck.parent.appendChild(progressParent);

				    deck.on('activate', function(e) {
				      progressBar.style[prop] = (e.index * 100 / (deck.slides.length - 1)) + '%';
				    });
				  };
				};
			}
		}
	},
	"bespoke-scale": {
		":mainpath:": "./lib/bespoke-scale.js",
		"lib": {
			"bespoke-scale.js": function (exports, module, require) {
				module.exports = function(options) {
				  return function(deck) {
				    var parent = deck.parent,
				      useZoom = options === 'zoom' || ('zoom' in parent.style && options !== 'transform'),
				
				      wrap = function(element) {
				        var wrapper = document.createElement('div');
				        wrapper.className = 'bespoke-scale-parent';
				        element.parentNode.insertBefore(wrapper, element);
				        wrapper.appendChild(element);
				        return wrapper;
				      },
				
				      elements = useZoom ? deck.slides : deck.slides.map(wrap),
				
				      transformProperty = (function(property) {
				        var prefixes = 'Moz Webkit O ms'.split(' ');
				        return prefixes.reduce(function(currentProperty, prefix) {
				            return prefix + property in parent.style ? prefix + property : currentProperty;
				          }, property.toLowerCase());
				      }('Transform')),
				
				      scale = useZoom ?
				        function(ratio, element) {
				          element.style.zoom = ratio;
				        } :
				        function(ratio, element) {
				          element.style[transformProperty] = 'scale(' + ratio + ')';
				        },
				
				      scaleAll = function() {
				        var firstSlide = deck.slides[0],
				          xScale = parent.offsetWidth / firstSlide.offsetWidth,
				          yScale = parent.offsetHeight / firstSlide.offsetHeight;
				
				        elements.forEach(scale.bind(null, Math.min(xScale, yScale)));
				      };
				
				    window.addEventListener('resize', scaleAll);
				    scaleAll();
				  };
				
				};
			}
		}
	},
	"bespoke-substeps": {
		"dom.js": function (exports, module, require) {
			'use strict';

			var toPositiveInteger = require('es5-ext/number/to-pos-integer')
			  , primitiveSet      = require('es5-ext/object/primitive-set')
			  , memoize           = require('memoizee/plain')
			  , getNormalizer     = require('memoizee/normalizers/get-1')

			  , forEach = Array.prototype.forEach, keys = Object.keys, round = Math.round
			  , byNum = function (a, b) { return a - b; }
			  , actions = primitiveSet('activate', 'deactivate', 'insert', 'remove', 'mark', 'class')
			  , getSubsteps;

			getSubsteps = memoize(function (element) {
				var map = {}, defaultOrder = 0;
				forEach.call(element.querySelectorAll('.substep'), function (el) {
					var order = Number(el.dataset.order), action, data, names, classOrder;
					if (isNaN(order)) order = (defaultOrder += 0.01);
					else defaultOrder = order;
					if (!map[order]) map[order] = {};
					action = el.dataset.action;
					if (!actions[action]) action = null;
					if (action == null) {
						if (el.nodeName.toLowerCase() === 'mark') action = 'mark';
						else action = 'activate';
					}
					if (action === 'class') {
						if (!el.dataset.names) throw new TypeError('Missing names for class configuration');
						names = el.dataset.names.split(' ');
						classOrder = order;
						names.forEach(function (name) {
							data = { el: el, name: name };
							if (!map[classOrder]) map[classOrder] = {};
							if (!map[classOrder].class) map[classOrder].class = [data];
							else map[order][action].push(data);
							classOrder += 0.001;
							classOrder = round(classOrder * 1000) / 1000;
						});
						return;
					}
					if (!map[order][action]) map[order][action] = [el];
					else map[order][action].push(el);
				});
				return keys(map).sort(byNum).map(function (order) { return map[order]; });
			}, { normalizer: getNormalizer() });

			module.exports = function (/*options*/) {
				return function (deck) {
					var activeSubstep = 0;

					deck.on('activate', function (e) {
						var substep = toPositiveInteger(e.substep);
						getSubsteps(e.slide).forEach(function (els, index) {
							var current = substep === index + 1
							  , isAfter = substep > index;
							if (els.activate) {
								els.activate.forEach(function (el) {
									el.classList[isAfter ? 'add' : 'remove']('active');
									el.classList[isAfter ? 'remove' : 'add']('inactive');
								});
							}
							if (els.deactivate) {
								els.deactivate.forEach(function (el) {
									el.classList[isAfter ? 'remove' : 'add']('active');
									el.classList[isAfter ? 'add' : 'remove']('inactive');
								});
							}
							if (els.insert) {
								els.insert.forEach(function (el) {
									el.classList[isAfter ? 'add' : 'remove']('inserted');
									el.classList[isAfter ? 'remove' : 'add']('removed');
								});
							}
							if (els.remove) {
								els.remove.forEach(function (el) {
									el.classList[isAfter ? 'remove' : 'add']('inserted');
									el.classList[isAfter ? 'add' : 'remove']('removed');
								});
							}
							if (els.mark) {
								els.mark.forEach(function (el) {
									el.classList[current ? 'add' : 'remove']('marked');
									el.classList[current ? 'remove' : 'add']('unmarked');
								});
							}
							if (els.class) {
								els.class.forEach(function (data) {
									data.el.classList[current ? 'add' : 'remove'](data.name);
								});
							}
						});
						activeSubstep = substep;
					});

					deck.on('next', function () {
						var activeSlide = deck.slide();
						if (!getSubsteps(deck.slides[activeSlide])[activeSubstep]) return;
						deck.slide(activeSlide, { substep: activeSubstep + 1 });
						return false;
					});

					deck.on('prev', function () {
						var activeSlide = deck.slide();
						if (!activeSlide) return;
						if (!activeSubstep) {
							--activeSlide;
							deck.slide(activeSlide, {
								substep: getSubsteps(deck.slides[activeSlide]).length
							});
						} else {
							deck.slide(activeSlide, { substep: activeSubstep - 1 });
						}
						return false;
					});
				};
			};
		},
		"index.js": function (exports, module, require) {
			'use strict';

			require('./style');
			module.exports = require('./dom');
		},
		"style.css": function (exports, module, require) {
			require('webmake/lib/browser/load-css.js')(".bespoke-slide .substep {\n\t-webkit-transition: all 0.3s ease;\n\t-moz-transition: all 0.3s ease;\n\t-o-transition: all 0.3s ease;\n\t-ms-transition: all 0.3s ease;\n\ttransition: all 0.3s ease;\n}\n/* activate & deactivate actions */\n.bespoke-slide .substep.inactive {\n\topacity: 0;\n\t-ms-filter: \"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";\n\tfilter: alpha(opacity=0);\n}\n.bespoke-slide .substep.active {\n\topacity: 1;\n\t-ms-filter: none;\n\tfilter: none;\n}\n@media print {\n\t.bespoke-slide .substep.inactive {\n\t\topacity: 1;\n\t\t-ms-filter: none;\n\t\tfilter: none;\n\t}\n}\n.bespoke-slide li.substep.inactive {\n\t-webkit-transform: translateX(-10px) translateZ(-10px) rotateY(20deg);\n\t-moz-transform: translateX(-10px) translateZ(-10px) rotateY(20deg);\n\t-o-transform: translateX(-10px) translateZ(-10px) rotateY(20deg);\n\t-ms-transform: translateX(-10px) translateZ(-10px) rotateY(20deg);\n\ttransform: translateX(-10px) translateZ(-10px) rotateY(20deg);\n}\n\n/* remove action */\n.bespoke-slide .substep.removed {\n\tdisplay: none;\n}\n\n.bespoke-slide .substep.unmarked {\n\tbackground: none;\n\tcolor: inherit;\n\tfont-weight: inherit;\n}");
		}
	},
	"bespoke-sync": {
		"client": {
			"id.js": function (exports, module, require) {
				'use strict';

				module.exports = Math.random().toString(36).slice(2, 7);
			},
			"index.js": function (exports, module, require) {
				'use strict';

				var xhr = require('./xhr')
				  , sse = require('./sse');

				module.exports = function (/*options*/) {
					var options = Object(arguments[1]);
					return function (deck) {
						sse(deck, options);
						xhr(deck, options);
					};
				};
			},
			"sse.js": function (exports, module, require) {
				'use strict';

				var id     = require('./id')
				  , decode = require('querystring/decode')

				  , parse  = JSON.parse;

				module.exports = function (deck/*, options*/) {
					var options = Object(arguments[1])
					  , path = options.ssePath || '/sse-slides/'
					  , source = new EventSource(path + '?id=' + id);

					if (options.log) {
						source.onopen = function () {
							console.log("Server connection: Open");
						};
						source.onerror = function () {
							console.error("Server connection: Error");
						};
					}

					source.onmessage = function (event) {
						var data = parse(decode(event.data.trim()).data);
						if (options.log) console.log("Server -> Client[" + id + "]", data);
						data.server = true;
						deck.slide(data.index, data);
					};
				};
			},
			"xhr.js": function (exports, module, require) {
				'use strict';

				var forEach  = require('es5-ext/object/for-each')
				  , isObject = require('es5-ext/object/is-object')
				  , encode   = require('querystring/encode')
				  , id       = require('./id')

				  , stringify = JSON.stringify;

				module.exports = function (deck/*, options*/) {
					var options = Object(arguments[1])
					  , path = (options.xhrPath || '/slide/') + '?id=' + id;
					deck.on('activate', function (e) {
						var result = {}, xhr;
						if (e.server) return;
						forEach(e, function (value, key) {
							if (isObject(value)) return;
							result[key] = value;
						});
						xhr = new XMLHttpRequest();
						xhr.open('POST', path, true);
						xhr.send(encode({ data: stringify(result) }));
						if (options.log) console.log("Client[" + id + "] -> Server", result);
					});
				};
			}
		}
	},
	"bespoke-touch": {
		":mainpath:": "./lib/bespoke-touch.js",
		"lib": {
			"bespoke-touch.js": function (exports, module, require) {
				module.exports = function(options) {
				  return function(deck) {
				    var axis = options == 'vertical' ? 'Y' : 'X',
				      startPosition,
				      delta;

				    deck.parent.addEventListener('touchstart', function(e) {
				      if (e.touches.length == 1) {
				        startPosition = e.touches[0]['page' + axis];
				        delta = 0;
				      }
				    });

				    deck.parent.addEventListener('touchmove', function(e) {
				      if (e.touches.length == 1) {
				        e.preventDefault();
				        delta = e.touches[0]['page' + axis] - startPosition;
				      }
				    });

				    deck.parent.addEventListener('touchend', function() {
				      if (Math.abs(delta) > 50) {
				        deck[delta > 0 ? 'prev' : 'next']();
				      }
				    });
				  };
				};
			}
		}
	},
	"d": {
		"index.js": function (exports, module, require) {
			'use strict';

			var assign        = require('es5-ext/object/assign')
			  , normalizeOpts = require('es5-ext/object/normalize-options')
			  , isCallable    = require('es5-ext/object/is-callable')
			  , contains      = require('es5-ext/string/#/contains')

			  , d;

			d = module.exports = function (dscr, value/*, options*/) {
				var c, e, w, options, desc;
				if ((arguments.length < 2) || (typeof dscr !== 'string')) {
					options = value;
					value = dscr;
					dscr = null;
				} else {
					options = arguments[2];
				}
				if (dscr == null) {
					c = w = true;
					e = false;
				} else {
					c = contains.call(dscr, 'c');
					e = contains.call(dscr, 'e');
					w = contains.call(dscr, 'w');
				}

				desc = { value: value, configurable: c, enumerable: e, writable: w };
				return !options ? desc : assign(normalizeOpts(options), desc);
			};

			d.gs = function (dscr, get, set/*, options*/) {
				var c, e, options, desc;
				if (typeof dscr !== 'string') {
					options = set;
					set = get;
					get = dscr;
					dscr = null;
				} else {
					options = arguments[3];
				}
				if (get == null) {
					get = undefined;
				} else if (!isCallable(get)) {
					options = get;
					get = set = undefined;
				} else if (set == null) {
					set = undefined;
				} else if (!isCallable(set)) {
					options = set;
					set = undefined;
				}
				if (dscr == null) {
					c = true;
					e = false;
				} else {
					c = contains.call(dscr, 'c');
					e = contains.call(dscr, 'e');
				}

				desc = { get: get, set: set, configurable: c, enumerable: e };
				return !options ? desc : assign(normalizeOpts(options), desc);
			};
		}
	},
	"es5-ext": {
		"array": {
			"#": {
				"e-index-of.js": function (exports, module, require) {
					'use strict';

					var toPosInt = require('../../number/to-pos-integer')
					  , value    = require('../../object/valid-value')

					  , indexOf = Array.prototype.indexOf
					  , hasOwnProperty = Object.prototype.hasOwnProperty
					  , abs = Math.abs, floor = Math.floor;

					module.exports = function (searchElement/*, fromIndex*/) {
						var i, l, fromIndex, val;
						if (searchElement === searchElement) { //jslint: ignore
							return indexOf.apply(this, arguments);
						}

						l = toPosInt(value(this).length);
						fromIndex = arguments[1];
						if (isNaN(fromIndex)) fromIndex = 0;
						else if (fromIndex >= 0) fromIndex = floor(fromIndex);
						else fromIndex = toPosInt(this.length) - floor(abs(fromIndex));

						for (i = fromIndex; i < l; ++i) {
							if (hasOwnProperty.call(this, i)) {
								val = this[i];
								if (val !== val) return i; //jslint: ignore
							}
						}
						return -1;
					};
				}
			},
			"from": {
				"index.js": function (exports, module, require) {
					'use strict';

					module.exports = require('./is-implemented')()
						? Array.from
						: require('./shim');
				},
				"is-implemented.js": function (exports, module, require) {
					'use strict';

					module.exports = function () {
						var from = Array.from, arr, result;
						if (typeof from !== 'function') return false;
						arr = ['raz', 'dwa'];
						result = from(arr);
						return Boolean(result && (result !== arr) && (result[1] === 'dwa'));
					};
				},
				"shim.js": function (exports, module, require) {
					'use strict';

					var iteratorSymbol = require('es6-symbol').iterator
					  , isArguments    = require('../../function/is-arguments')
					  , isFunction     = require('../../function/is-function')
					  , toPosInt       = require('../../number/to-pos-integer')
					  , callable       = require('../../object/valid-callable')
					  , validValue     = require('../../object/valid-value')
					  , isString       = require('../../string/is-string')

					  , isArray = Array.isArray, call = Function.prototype.call
					  , desc = { configurable: true, enumerable: true, writable: true, value: null }
					  , defineProperty = Object.defineProperty;

					module.exports = function (arrayLike/*, mapFn, thisArg*/) {
						var mapFn = arguments[1], thisArg = arguments[2], Constructor, i, j, arr, l, code, iterator
						  , result, getIterator, value;

						arrayLike = Object(validValue(arrayLike));

						if (mapFn != null) callable(mapFn);
						if (!this || (this === Array) || !isFunction(this)) {
							// Result: Plain array
							if (!mapFn) {
								if (isArguments(arrayLike)) {
									// Source: Arguments
									l = arrayLike.length;
									if (l !== 1) return Array.apply(null, arrayLike);
									arr = new Array(1);
									arr[0] = arrayLike[0];
									return arr;
								}
								if (isArray(arrayLike)) {
									// Source: Array
									arr = new Array(l = arrayLike.length);
									for (i = 0; i < l; ++i) arr[i] = arrayLike[i];
									return arr;
								}
							}
							arr = [];
						} else {
							// Result: Non plain array
							Constructor = this;
						}

						if (!isArray(arrayLike)) {
							if ((getIterator = arrayLike[iteratorSymbol]) !== undefined) {
								// Source: Iterator
								iterator = callable(getIterator).call(arrayLike);
								if (Constructor) arr = new Constructor();
								result = iterator.next();
								i = 0;
								while (!result.done) {
									value = mapFn ? call.call(mapFn, thisArg, result.value, i) : result.value;
									if (!Constructor) {
										arr[i] = value;
									} else {
										desc.value = value;
										defineProperty(arr, i, desc);
									}
									result = iterator.next();
									++i;
								}
								l = i;
							} else if (isString(arrayLike)) {
								// Source: String
								l = arrayLike.length;
								if (Constructor) arr = new Constructor();
								for (i = 0, j = 0; i < l; ++i) {
									value = arrayLike[i];
									if ((i + 1) < l) {
										code = value.charCodeAt(0);
										if ((code >= 0xD800) && (code <= 0xDBFF)) value += arrayLike[++i];
									}
									value = mapFn ? call.call(mapFn, thisArg, value, j) : value;
									if (!Constructor) {
										arr[j] = value;
									} else {
										desc.value = value;
										defineProperty(arr, j, desc);
									}
									++j;
								}
								l = j;
							}
						}
						if (l === undefined) {
							// Source: array or array-like
							l = toPosInt(arrayLike.length);
							if (Constructor) arr = new Constructor(l);
							for (i = 0; i < l; ++i) {
								value = mapFn ? call.call(mapFn, thisArg, arrayLike[i], i) : arrayLike[i];
								if (!Constructor) {
									arr[i] = value;
								} else {
									desc.value = value;
									defineProperty(arr, i, desc);
								}
							}
						}
						if (Constructor) {
							desc.value = null;
							arr.length = l;
						}
						return arr;
					};
				}
			},
			"to-array.js": function (exports, module, require) {
				'use strict';

				var from = require('./from')

				  , isArray = Array.isArray;

				module.exports = function (arrayLike) {
					return isArray(arrayLike) ? arrayLike : from(arrayLike);
				};
			}
		},
		"error": {
			"custom.js": function (exports, module, require) {
				'use strict';

				var assign = require('../object/assign')

				  , captureStackTrace = Error.captureStackTrace;

				exports = module.exports = function (message/*, code, ext*/) {
					var err = new Error(), code = arguments[1], ext = arguments[2];
					if (ext == null) {
						if (code && (typeof code === 'object')) {
							ext = code;
							code = null;
						}
					}
					if (ext != null) assign(err, ext);
					err.message = String(message);
					if (code != null) err.code = String(code);
					if (captureStackTrace) captureStackTrace(err, exports);
					return err;
				};
			}
		},
		"function": {
			"_define-length.js": function (exports, module, require) {
				'use strict';

				var toPosInt = require('../number/to-pos-integer')

				  , test = function (a, b) {}, desc, defineProperty
				  , generate, mixin;

				try {
					Object.defineProperty(test, 'length', { configurable: true, writable: false,
						enumerable: false, value: 1 });
				} catch (ignore) {}

				if (test.length === 1) {
					// ES6
					desc = { configurable: true, writable: false, enumerable: false };
					defineProperty = Object.defineProperty;
					module.exports = function (fn, length) {
						length = toPosInt(length);
						if (fn.length === length) return fn;
						desc.value = length;
						return defineProperty(fn, 'length', desc);
					};
				} else {
					mixin = require('../object/mixin');
					generate = (function () {
						var cache = [];
						return function (l) {
							var args, i = 0;
							if (cache[l]) return cache[l];
							args = [];
							while (l--) args.push('a' + (++i).toString(36));
							return new Function('fn', 'return function (' + args.join(', ') +
								') { return fn.apply(this, arguments); };');
						};
					}());
					module.exports = function (src, length) {
						var target;
						length = toPosInt(length);
						if (src.length === length) return src;
						target = generate(length)(src);
						try { mixin(target, src); } catch (ignore) {}
						return target;
					};
				}
			},
			"is-arguments.js": function (exports, module, require) {
				'use strict';

				var toString = Object.prototype.toString

				  , id = toString.call((function () { return arguments; }()));

				module.exports = function (x) { return (toString.call(x) === id); };
			},
			"is-function.js": function (exports, module, require) {
				'use strict';

				var toString = Object.prototype.toString

				  , id = toString.call(require('./noop'));

				module.exports = function (f) {
					return (typeof f === "function") && (toString.call(f) === id);
				};
			},
			"noop.js": function (exports, module, require) {
				'use strict';

				module.exports = function () {};
			}
		},
		"math": {
			"sign": {
				"index.js": function (exports, module, require) {
					'use strict';

					module.exports = require('./is-implemented')()
						? Math.sign
						: require('./shim');
				},
				"is-implemented.js": function (exports, module, require) {
					'use strict';

					module.exports = function () {
						var sign = Math.sign;
						if (typeof sign !== 'function') return false;
						return ((sign(10) === 1) && (sign(-20) === -1));
					};
				},
				"shim.js": function (exports, module, require) {
					'use strict';

					module.exports = function (value) {
						value = Number(value);
						if (isNaN(value) || (value === 0)) return value;
						return (value > 0) ? 1 : -1;
					};
				}
			}
		},
		"number": {
			"to-integer.js": function (exports, module, require) {
				'use strict';

				var sign = require('../math/sign')

				  , abs = Math.abs, floor = Math.floor;

				module.exports = function (value) {
					if (isNaN(value)) return 0;
					value = Number(value);
					if ((value === 0) || !isFinite(value)) return value;
					return sign(value) * floor(abs(value));
				};
			},
			"to-pos-integer.js": function (exports, module, require) {
				'use strict';

				var toInteger = require('./to-integer')

				  , max = Math.max;

				module.exports = function (value) { return max(0, toInteger(value)); };
			}
		},
		"object": {
			"_iterate.js": function (exports, module, require) {
				// Internal method, used by iteration functions.
				// Calls a function for each key-value pair found in object
				// Optionally takes compareFn to iterate object in specific order

				'use strict';

				var callable = require('./valid-callable')
				  , value    = require('./valid-value')

				  , bind = Function.prototype.bind, call = Function.prototype.call, keys = Object.keys
				  , propertyIsEnumerable = Object.prototype.propertyIsEnumerable;

				module.exports = function (method, defVal) {
					return function (obj, cb/*, thisArg, compareFn*/) {
						var list, thisArg = arguments[2], compareFn = arguments[3];
						obj = Object(value(obj));
						callable(cb);

						list = keys(obj);
						if (compareFn) {
							list.sort((typeof compareFn === 'function') ? bind.call(compareFn, obj) : undefined);
						}
						if (typeof method !== 'function') method = list[method];
						return call.call(method, list, function (key, index) {
							if (!propertyIsEnumerable.call(obj, key)) return defVal;
							return call.call(cb, thisArg, obj[key], key, obj, index);
						});
					};
				};
			},
			"assign": {
				"index.js": function (exports, module, require) {
					'use strict';

					module.exports = require('./is-implemented')()
						? Object.assign
						: require('./shim');
				},
				"is-implemented.js": function (exports, module, require) {
					'use strict';

					module.exports = function () {
						var assign = Object.assign, obj;
						if (typeof assign !== 'function') return false;
						obj = { foo: 'raz' };
						assign(obj, { bar: 'dwa' }, { trzy: 'trzy' });
						return (obj.foo + obj.bar + obj.trzy) === 'razdwatrzy';
					};
				},
				"shim.js": function (exports, module, require) {
					'use strict';

					var keys  = require('../keys')
					  , value = require('../valid-value')

					  , max = Math.max;

					module.exports = function (dest, src/*, …srcn*/) {
						var error, i, l = max(arguments.length, 2), assign;
						dest = Object(value(dest));
						assign = function (key) {
							try { dest[key] = src[key]; } catch (e) {
								if (!error) error = e;
							}
						};
						for (i = 1; i < l; ++i) {
							src = arguments[i];
							keys(src).forEach(assign);
						}
						if (error !== undefined) throw error;
						return dest;
					};
				}
			},
			"for-each.js": function (exports, module, require) {
				'use strict';

				module.exports = require('./_iterate')('forEach');
			},
			"is-callable.js": function (exports, module, require) {
				// Deprecated

				'use strict';

				module.exports = function (obj) { return typeof obj === 'function'; };
			},
			"is-object.js": function (exports, module, require) {
				'use strict';

				var map = { function: true, object: true };

				module.exports = function (x) {
					return ((x != null) && map[typeof x]) || false;
				};
			},
			"keys": {
				"index.js": function (exports, module, require) {
					'use strict';

					module.exports = require('./is-implemented')()
						? Object.keys
						: require('./shim');
				},
				"is-implemented.js": function (exports, module, require) {
					'use strict';

					module.exports = function () {
						try {
							Object.keys('primitive');
							return true;
						} catch (e) { return false; }
					};
				},
				"shim.js": function (exports, module, require) {
					'use strict';

					var keys = Object.keys;

					module.exports = function (object) {
						return keys(object == null ? object : Object(object));
					};
				}
			},
			"mixin.js": function (exports, module, require) {
				'use strict';

				var value = require('./valid-value')

				  , defineProperty = Object.defineProperty
				  , getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor
				  , getOwnPropertyNames = Object.getOwnPropertyNames
				  , getOwnPropertySymbols = Object.getOwnPropertySymbols;

				module.exports = function (target, source) {
					var error, sourceObject = Object(value(source));
					target = Object(value(target));
					getOwnPropertyNames(sourceObject).forEach(function (name) {
						try {
							defineProperty(target, name, getOwnPropertyDescriptor(source, name));
						} catch (e) { error = e; }
					});
					if (typeof getOwnPropertySymbols === 'function') {
						getOwnPropertySymbols(sourceObject).forEach(function (symbol) {
							try {
								defineProperty(target, symbol, getOwnPropertyDescriptor(source, symbol));
							} catch (e) { error = e; }
						});
					}
					if (error !== undefined) throw error;
					return target;
				};
			},
			"normalize-options.js": function (exports, module, require) {
				'use strict';

				var forEach = Array.prototype.forEach, create = Object.create;

				var process = function (src, obj) {
					var key;
					for (key in src) obj[key] = src[key];
				};

				module.exports = function (options/*, …options*/) {
					var result = create(null);
					forEach.call(arguments, function (options) {
						if (options == null) return;
						process(Object(options), result);
					});
					return result;
				};
			},
			"primitive-set.js": function (exports, module, require) {
				'use strict';

				var forEach = Array.prototype.forEach, create = Object.create;

				module.exports = function (arg/*, …args*/) {
					var set = create(null);
					forEach.call(arguments, function (name) { set[name] = true; });
					return set;
				};
			},
			"valid-callable.js": function (exports, module, require) {
				'use strict';

				module.exports = function (fn) {
					if (typeof fn !== 'function') throw new TypeError(fn + " is not a function");
					return fn;
				};
			},
			"valid-value.js": function (exports, module, require) {
				'use strict';

				module.exports = function (value) {
					if (value == null) throw new TypeError("Cannot use null or undefined");
					return value;
				};
			}
		},
		"string": {
			"#": {
				"contains": {
					"index.js": function (exports, module, require) {
						'use strict';

						module.exports = require('./is-implemented')()
							? String.prototype.contains
							: require('./shim');
					},
					"is-implemented.js": function (exports, module, require) {
						'use strict';

						var str = 'razdwatrzy';

						module.exports = function () {
							if (typeof str.contains !== 'function') return false;
							return ((str.contains('dwa') === true) && (str.contains('foo') === false));
						};
					},
					"shim.js": function (exports, module, require) {
						'use strict';

						var indexOf = String.prototype.indexOf;

						module.exports = function (searchString/*, position*/) {
							return indexOf.call(this, searchString, arguments[1]) > -1;
						};
					}
				}
			},
			"is-string.js": function (exports, module, require) {
				'use strict';

				var toString = Object.prototype.toString

				  , id = toString.call('');

				module.exports = function (x) {
					return (typeof x === 'string') || (x && (typeof x === 'object') &&
						((x instanceof String) || (toString.call(x) === id))) || false;
				};
			}
		}
	},
	"es6-symbol": {
		"index.js": function (exports, module, require) {
			'use strict';

			module.exports = require('./is-implemented')() ? Symbol : require('./polyfill');
		},
		"is-implemented.js": function (exports, module, require) {
			'use strict';

			var validTypes = { object: true, symbol: true };

			module.exports = function () {
				var symbol;
				if (typeof Symbol !== 'function') return false;
				symbol = Symbol('test symbol');
				try { String(symbol); } catch (e) { return false; }

				// Return 'true' also for polyfills
				if (!validTypes[typeof Symbol.iterator]) return false;
				if (!validTypes[typeof Symbol.toPrimitive]) return false;
				if (!validTypes[typeof Symbol.toStringTag]) return false;

				return true;
			};
		},
		"is-symbol.js": function (exports, module, require) {
			'use strict';

			module.exports = function (x) {
				if (!x) return false;
				if (typeof x === 'symbol') return true;
				if (!x.constructor) return false;
				if (x.constructor.name !== 'Symbol') return false;
				return (x[x.constructor.toStringTag] === 'Symbol');
			};
		},
		"polyfill.js": function (exports, module, require) {
			// ES2015 Symbol polyfill for environments that do not support it (or partially support it)

			'use strict';

			var d              = require('d')
			  , validateSymbol = require('./validate-symbol')

			  , create = Object.create, defineProperties = Object.defineProperties
			  , defineProperty = Object.defineProperty, objPrototype = Object.prototype
			  , NativeSymbol, SymbolPolyfill, HiddenSymbol, globalSymbols = create(null)
			  , isNativeSafe;

			if (typeof Symbol === 'function') {
				NativeSymbol = Symbol;
				try {
					String(NativeSymbol());
					isNativeSafe = true;
				} catch (ignore) {}
			}

			var generateName = (function () {
				var created = create(null);
				return function (desc) {
					var postfix = 0, name, ie11BugWorkaround;
					while (created[desc + (postfix || '')]) ++postfix;
					desc += (postfix || '');
					created[desc] = true;
					name = '@@' + desc;
					defineProperty(objPrototype, name, d.gs(null, function (value) {
						// For IE11 issue see:
						// https://connect.microsoft.com/IE/feedbackdetail/view/1928508/
						//    ie11-broken-getters-on-dom-objects
						// https://github.com/medikoo/es6-symbol/issues/12
						if (ie11BugWorkaround) return;
						ie11BugWorkaround = true;
						defineProperty(this, name, d(value));
						ie11BugWorkaround = false;
					}));
					return name;
				};
			}());

			// Internal constructor (not one exposed) for creating Symbol instances.
			// This one is used to ensure that `someSymbol instanceof Symbol` always return false
			HiddenSymbol = function Symbol(description) {
				if (this instanceof HiddenSymbol) throw new TypeError('TypeError: Symbol is not a constructor');
				return SymbolPolyfill(description);
			};

			// Exposed `Symbol` constructor
			// (returns instances of HiddenSymbol)
			module.exports = SymbolPolyfill = function Symbol(description) {
				var symbol;
				if (this instanceof Symbol) throw new TypeError('TypeError: Symbol is not a constructor');
				if (isNativeSafe) return NativeSymbol(description);
				symbol = create(HiddenSymbol.prototype);
				description = (description === undefined ? '' : String(description));
				return defineProperties(symbol, {
					__description__: d('', description),
					__name__: d('', generateName(description))
				});
			};
			defineProperties(SymbolPolyfill, {
				for: d(function (key) {
					if (globalSymbols[key]) return globalSymbols[key];
					return (globalSymbols[key] = SymbolPolyfill(String(key)));
				}),
				keyFor: d(function (s) {
					var key;
					validateSymbol(s);
					for (key in globalSymbols) if (globalSymbols[key] === s) return key;
				}),

				// If there's native implementation of given symbol, let's fallback to it
				// to ensure proper interoperability with other native functions e.g. Array.from
				hasInstance: d('', (NativeSymbol && NativeSymbol.hasInstance) || SymbolPolyfill('hasInstance')),
				isConcatSpreadable: d('', (NativeSymbol && NativeSymbol.isConcatSpreadable) ||
					SymbolPolyfill('isConcatSpreadable')),
				iterator: d('', (NativeSymbol && NativeSymbol.iterator) || SymbolPolyfill('iterator')),
				match: d('', (NativeSymbol && NativeSymbol.match) || SymbolPolyfill('match')),
				replace: d('', (NativeSymbol && NativeSymbol.replace) || SymbolPolyfill('replace')),
				search: d('', (NativeSymbol && NativeSymbol.search) || SymbolPolyfill('search')),
				species: d('', (NativeSymbol && NativeSymbol.species) || SymbolPolyfill('species')),
				split: d('', (NativeSymbol && NativeSymbol.split) || SymbolPolyfill('split')),
				toPrimitive: d('', (NativeSymbol && NativeSymbol.toPrimitive) || SymbolPolyfill('toPrimitive')),
				toStringTag: d('', (NativeSymbol && NativeSymbol.toStringTag) || SymbolPolyfill('toStringTag')),
				unscopables: d('', (NativeSymbol && NativeSymbol.unscopables) || SymbolPolyfill('unscopables'))
			});

			// Internal tweaks for real symbol producer
			defineProperties(HiddenSymbol.prototype, {
				constructor: d(SymbolPolyfill),
				toString: d('', function () { return this.__name__; })
			});

			// Proper implementation of methods exposed on Symbol.prototype
			// They won't be accessible on produced symbol instances as they derive from HiddenSymbol.prototype
			defineProperties(SymbolPolyfill.prototype, {
				toString: d(function () { return 'Symbol (' + validateSymbol(this).__description__ + ')'; }),
				valueOf: d(function () { return validateSymbol(this); })
			});
			defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toPrimitive, d('', function () {
				var symbol = validateSymbol(this);
				if (typeof symbol === 'symbol') return symbol;
				return symbol.toString();
			}));
			defineProperty(SymbolPolyfill.prototype, SymbolPolyfill.toStringTag, d('c', 'Symbol'));

			// Proper implementaton of toPrimitive and toStringTag for returned symbol instances
			defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toStringTag,
				d('c', SymbolPolyfill.prototype[SymbolPolyfill.toStringTag]));

			// Note: It's important to define `toPrimitive` as last one, as some implementations
			// implement `toPrimitive` natively without implementing `toStringTag` (or other specified symbols)
			// And that may invoke error in definition flow:
			// See: https://github.com/medikoo/es6-symbol/issues/13#issuecomment-164146149
			defineProperty(HiddenSymbol.prototype, SymbolPolyfill.toPrimitive,
				d('c', SymbolPolyfill.prototype[SymbolPolyfill.toPrimitive]));
		},
		"validate-symbol.js": function (exports, module, require) {
			'use strict';

			var isSymbol = require('./is-symbol');

			module.exports = function (value) {
				if (!isSymbol(value)) throw new TypeError(value + " is not a symbol");
				return value;
			};
		}
	},
	"event-emitter": {
		"index.js": function (exports, module, require) {
			'use strict';

			var d        = require('d')
			  , callable = require('es5-ext/object/valid-callable')

			  , apply = Function.prototype.apply, call = Function.prototype.call
			  , create = Object.create, defineProperty = Object.defineProperty
			  , defineProperties = Object.defineProperties
			  , hasOwnProperty = Object.prototype.hasOwnProperty
			  , descriptor = { configurable: true, enumerable: false, writable: true }

			  , on, once, off, emit, methods, descriptors, base;

			on = function (type, listener) {
				var data;

				callable(listener);

				if (!hasOwnProperty.call(this, '__ee__')) {
					data = descriptor.value = create(null);
					defineProperty(this, '__ee__', descriptor);
					descriptor.value = null;
				} else {
					data = this.__ee__;
				}
				if (!data[type]) data[type] = listener;
				else if (typeof data[type] === 'object') data[type].push(listener);
				else data[type] = [data[type], listener];

				return this;
			};

			once = function (type, listener) {
				var once, self;

				callable(listener);
				self = this;
				on.call(this, type, once = function () {
					off.call(self, type, once);
					apply.call(listener, this, arguments);
				});

				once.__eeOnceListener__ = listener;
				return this;
			};

			off = function (type, listener) {
				var data, listeners, candidate, i;

				callable(listener);

				if (!hasOwnProperty.call(this, '__ee__')) return this;
				data = this.__ee__;
				if (!data[type]) return this;
				listeners = data[type];

				if (typeof listeners === 'object') {
					for (i = 0; (candidate = listeners[i]); ++i) {
						if ((candidate === listener) ||
								(candidate.__eeOnceListener__ === listener)) {
							if (listeners.length === 2) data[type] = listeners[i ? 0 : 1];
							else listeners.splice(i, 1);
						}
					}
				} else {
					if ((listeners === listener) ||
							(listeners.__eeOnceListener__ === listener)) {
						delete data[type];
					}
				}

				return this;
			};

			emit = function (type) {
				var i, l, listener, listeners, args;

				if (!hasOwnProperty.call(this, '__ee__')) return;
				listeners = this.__ee__[type];
				if (!listeners) return;

				if (typeof listeners === 'object') {
					l = arguments.length;
					args = new Array(l - 1);
					for (i = 1; i < l; ++i) args[i - 1] = arguments[i];

					listeners = listeners.slice();
					for (i = 0; (listener = listeners[i]); ++i) {
						apply.call(listener, this, args);
					}
				} else {
					switch (arguments.length) {
					case 1:
						call.call(listeners, this);
						break;
					case 2:
						call.call(listeners, this, arguments[1]);
						break;
					case 3:
						call.call(listeners, this, arguments[1], arguments[2]);
						break;
					default:
						l = arguments.length;
						args = new Array(l - 1);
						for (i = 1; i < l; ++i) {
							args[i - 1] = arguments[i];
						}
						apply.call(listeners, this, args);
					}
				}
			};

			methods = {
				on: on,
				once: once,
				off: off,
				emit: emit
			};

			descriptors = {
				on: d(on),
				once: d(once),
				off: d(off),
				emit: d(emit)
			};

			base = defineProperties({}, descriptors);

			module.exports = exports = function (o) {
				return (o == null) ? create(base) : defineProperties(Object(o), descriptors);
			};
			exports.methods = methods;
		}
	},
	"highlight.js": {
		":mainpath:": "./lib/index.js",
		"lib": {
			"highlight.js": function (exports, module, require) {
				var Highlight = function() {

				  /* Utility functions */

				  function escape(value) {
				    return value.replace(/&/gm, '&amp;').replace(/</gm, '&lt;').replace(/>/gm, '&gt;');
				  }

				  function tag(node) {
				    return node.nodeName.toLowerCase();
				  }

				  function testRe(re, lexeme) {
				    var match = re && re.exec(lexeme);
				    return match && match.index == 0;
				  }

				  function blockLanguage(block) {
				    var classes = (block.className + ' ' + (block.parentNode ? block.parentNode.className : '')).split(/\s+/);
				    classes = classes.map(function(c) {return c.replace(/^lang(uage)?-/, '');});
				    return classes.filter(function(c) {return getLanguage(c) || /no(-?)highlight/.test(c);})[0];
				  }

				  function inherit(parent, obj) {
				    var result = {};
				    for (var key in parent)
				      result[key] = parent[key];
				    if (obj)
				      for (var key in obj)
				        result[key] = obj[key];
				    return result;
				  };

				  /* Stream merging */

				  function nodeStream(node) {
				    var result = [];
				    (function _nodeStream(node, offset) {
				      for (var child = node.firstChild; child; child = child.nextSibling) {
				        if (child.nodeType == 3)
				          offset += child.nodeValue.length;
				        else if (child.nodeType == 1) {
				          result.push({
				            event: 'start',
				            offset: offset,
				            node: child
				          });
				          offset = _nodeStream(child, offset);
				          // Prevent void elements from having an end tag that would actually
				          // double them in the output. There are more void elements in HTML
				          // but we list only those realistically expected in code display.
				          if (!tag(child).match(/br|hr|img|input/)) {
				            result.push({
				              event: 'stop',
				              offset: offset,
				              node: child
				            });
				          }
				        }
				      }
				      return offset;
				    })(node, 0);
				    return result;
				  }

				  function mergeStreams(original, highlighted, value) {
				    var processed = 0;
				    var result = '';
				    var nodeStack = [];

				    function selectStream() {
				      if (!original.length || !highlighted.length) {
				        return original.length ? original : highlighted;
				      }
				      if (original[0].offset != highlighted[0].offset) {
				        return (original[0].offset < highlighted[0].offset) ? original : highlighted;
				      }

				      /*
				      To avoid starting the stream just before it should stop the order is
				      ensured that original always starts first and closes last:

				      if (event1 == 'start' && event2 == 'start')
				        return original;
				      if (event1 == 'start' && event2 == 'stop')
				        return highlighted;
				      if (event1 == 'stop' && event2 == 'start')
				        return original;
				      if (event1 == 'stop' && event2 == 'stop')
				        return highlighted;

				      ... which is collapsed to:
				      */
				      return highlighted[0].event == 'start' ? original : highlighted;
				    }

				    function open(node) {
				      function attr_str(a) {return ' ' + a.nodeName + '="' + escape(a.value) + '"';}
				      result += '<' + tag(node) + Array.prototype.map.call(node.attributes, attr_str).join('') + '>';
				    }

				    function close(node) {
				      result += '</' + tag(node) + '>';
				    }

				    function render(event) {
				      (event.event == 'start' ? open : close)(event.node);
				    }

				    while (original.length || highlighted.length) {
				      var stream = selectStream();
				      result += escape(value.substr(processed, stream[0].offset - processed));
				      processed = stream[0].offset;
				      if (stream == original) {
				        /*
				        On any opening or closing tag of the original markup we first close
				        the entire highlighted node stack, then render the original tag along
				        with all the following original tags at the same offset and then
				        reopen all the tags on the highlighted stack.
				        */
				        nodeStack.reverse().forEach(close);
				        do {
				          render(stream.splice(0, 1)[0]);
				          stream = selectStream();
				        } while (stream == original && stream.length && stream[0].offset == processed);
				        nodeStack.reverse().forEach(open);
				      } else {
				        if (stream[0].event == 'start') {
				          nodeStack.push(stream[0].node);
				        } else {
				          nodeStack.pop();
				        }
				        render(stream.splice(0, 1)[0]);
				      }
				    }
				    return result + escape(value.substr(processed));
				  }

				  /* Initialization */

				  function compileLanguage(language) {

				    function reStr(re) {
				        return (re && re.source) || re;
				    }

				    function langRe(value, global) {
				      return RegExp(
				        reStr(value),
				        'm' + (language.case_insensitive ? 'i' : '') + (global ? 'g' : '')
				      );
				    }

				    function compileMode(mode, parent) {
				      if (mode.compiled)
				        return;
				      mode.compiled = true;

				      mode.keywords = mode.keywords || mode.beginKeywords;
				      if (mode.keywords) {
				        var compiled_keywords = {};

				        var flatten = function(className, str) {
				          if (language.case_insensitive) {
				            str = str.toLowerCase();
				          }
				          str.split(' ').forEach(function(kw) {
				            var pair = kw.split('|');
				            compiled_keywords[pair[0]] = [className, pair[1] ? Number(pair[1]) : 1];
				          });
				        };

				        if (typeof mode.keywords == 'string') { // string
				          flatten('keyword', mode.keywords);
				        } else {
				          Object.keys(mode.keywords).forEach(function (className) {
				            flatten(className, mode.keywords[className]);
				          });
				        }
				        mode.keywords = compiled_keywords;
				      }
				      mode.lexemesRe = langRe(mode.lexemes || /\b[A-Za-z0-9_]+\b/, true);

				      if (parent) {
				        if (mode.beginKeywords) {
				          mode.begin = '\\b(' + mode.beginKeywords.split(' ').join('|') + ')\\b';
				        }
				        if (!mode.begin)
				          mode.begin = /\B|\b/;
				        mode.beginRe = langRe(mode.begin);
				        if (!mode.end && !mode.endsWithParent)
				          mode.end = /\B|\b/;
				        if (mode.end)
				          mode.endRe = langRe(mode.end);
				        mode.terminator_end = reStr(mode.end) || '';
				        if (mode.endsWithParent && parent.terminator_end)
				          mode.terminator_end += (mode.end ? '|' : '') + parent.terminator_end;
				      }
				      if (mode.illegal)
				        mode.illegalRe = langRe(mode.illegal);
				      if (mode.relevance === undefined)
				        mode.relevance = 1;
				      if (!mode.contains) {
				        mode.contains = [];
				      }
				      var expanded_contains = [];
				      mode.contains.forEach(function(c) {
				        if (c.variants) {
				          c.variants.forEach(function(v) {expanded_contains.push(inherit(c, v));});
				        } else {
				          expanded_contains.push(c == 'self' ? mode : c);
				        }
				      });
				      mode.contains = expanded_contains;
				      mode.contains.forEach(function(c) {compileMode(c, mode);});

				      if (mode.starts) {
				        compileMode(mode.starts, parent);
				      }

				      var terminators =
				        mode.contains.map(function(c) {
				          return c.beginKeywords ? '\\.?(' + c.begin + ')\\.?' : c.begin;
				        })
				        .concat([mode.terminator_end, mode.illegal])
				        .map(reStr)
				        .filter(Boolean);
				      mode.terminators = terminators.length ? langRe(terminators.join('|'), true) : {exec: function(s) {return null;}};
				    }

				    compileMode(language);
				  }

				  /*
				  Core highlighting function. Accepts a language name, or an alias, and a
				  string with the code to highlight. Returns an object with the following
				  properties:

				  - relevance (int)
				  - value (an HTML string with highlighting markup)

				  */
				  function highlight(name, value, ignore_illegals, continuation) {

				    function subMode(lexeme, mode) {
				      for (var i = 0; i < mode.contains.length; i++) {
				        if (testRe(mode.contains[i].beginRe, lexeme)) {
				          return mode.contains[i];
				        }
				      }
				    }

				    function endOfMode(mode, lexeme) {
				      if (testRe(mode.endRe, lexeme)) {
				        return mode;
				      }
				      if (mode.endsWithParent) {
				        return endOfMode(mode.parent, lexeme);
				      }
				    }

				    function isIllegal(lexeme, mode) {
				      return !ignore_illegals && testRe(mode.illegalRe, lexeme);
				    }

				    function keywordMatch(mode, match) {
				      var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];
				      return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];
				    }

				    function buildSpan(classname, insideSpan, leaveOpen, noPrefix) {
				      var classPrefix = noPrefix ? '' : options.classPrefix,
				          openSpan    = '<span class="' + classPrefix,
				          closeSpan   = leaveOpen ? '' : '</span>';

				      openSpan += classname + '">';

				      return openSpan + insideSpan + closeSpan;
				    }

				    function processKeywords() {
				      if (!top.keywords)
				        return escape(mode_buffer);
				      var result = '';
				      var last_index = 0;
				      top.lexemesRe.lastIndex = 0;
				      var match = top.lexemesRe.exec(mode_buffer);
				      while (match) {
				        result += escape(mode_buffer.substr(last_index, match.index - last_index));
				        var keyword_match = keywordMatch(top, match);
				        if (keyword_match) {
				          relevance += keyword_match[1];
				          result += buildSpan(keyword_match[0], escape(match[0]));
				        } else {
				          result += escape(match[0]);
				        }
				        last_index = top.lexemesRe.lastIndex;
				        match = top.lexemesRe.exec(mode_buffer);
				      }
				      return result + escape(mode_buffer.substr(last_index));
				    }

				    function processSubLanguage() {
				      if (top.subLanguage && !languages[top.subLanguage]) {
				        return escape(mode_buffer);
				      }
				      var result = top.subLanguage ? highlight(top.subLanguage, mode_buffer, true, subLanguageTop) : highlightAuto(mode_buffer);
				      // Counting embedded language score towards the host language may be disabled
				      // with zeroing the containing mode relevance. Usecase in point is Markdown that
				      // allows XML everywhere and makes every XML snippet to have a much larger Markdown
				      // score.
				      if (top.relevance > 0) {
				        relevance += result.relevance;
				      }
				      if (top.subLanguageMode == 'continuous') {
				        subLanguageTop = result.top;
				      }
				      return buildSpan(result.language, result.value, false, true);
				    }

				    function processBuffer() {
				      return top.subLanguage !== undefined ? processSubLanguage() : processKeywords();
				    }

				    function startNewMode(mode, lexeme) {
				      var markup = mode.className? buildSpan(mode.className, '', true): '';
				      if (mode.returnBegin) {
				        result += markup;
				        mode_buffer = '';
				      } else if (mode.excludeBegin) {
				        result += escape(lexeme) + markup;
				        mode_buffer = '';
				      } else {
				        result += markup;
				        mode_buffer = lexeme;
				      }
				      top = Object.create(mode, {parent: {value: top}});
				    }

				    function processLexeme(buffer, lexeme) {

				      mode_buffer += buffer;
				      if (lexeme === undefined) {
				        result += processBuffer();
				        return 0;
				      }

				      var new_mode = subMode(lexeme, top);
				      if (new_mode) {
				        result += processBuffer();
				        startNewMode(new_mode, lexeme);
				        return new_mode.returnBegin ? 0 : lexeme.length;
				      }

				      var end_mode = endOfMode(top, lexeme);
				      if (end_mode) {
				        var origin = top;
				        if (!(origin.returnEnd || origin.excludeEnd)) {
				          mode_buffer += lexeme;
				        }
				        result += processBuffer();
				        do {
				          if (top.className) {
				            result += '</span>';
				          }
				          relevance += top.relevance;
				          top = top.parent;
				        } while (top != end_mode.parent);
				        if (origin.excludeEnd) {
				          result += escape(lexeme);
				        }
				        mode_buffer = '';
				        if (end_mode.starts) {
				          startNewMode(end_mode.starts, '');
				        }
				        return origin.returnEnd ? 0 : lexeme.length;
				      }

				      if (isIllegal(lexeme, top))
				        throw new Error('Illegal lexeme "' + lexeme + '" for mode "' + (top.className || '<unnamed>') + '"');

				      /*
				      Parser should not reach this point as all types of lexemes should be caught
				      earlier, but if it does due to some bug make sure it advances at least one
				      character forward to prevent infinite looping.
				      */
				      mode_buffer += lexeme;
				      return lexeme.length || 1;
				    }

				    var language = getLanguage(name);
				    if (!language) {
				      throw new Error('Unknown language: "' + name + '"');
				    }

				    compileLanguage(language);
				    var top = continuation || language;
				    var subLanguageTop;
				    var result = '';
				    for(var current = top; current != language; current = current.parent) {
				      if (current.className) {
				        result = buildSpan(current.className, '', true) + result;
				      }
				    }
				    var mode_buffer = '';
				    var relevance = 0;
				    try {
				      var match, count, index = 0;
				      while (true) {
				        top.terminators.lastIndex = index;
				        match = top.terminators.exec(value);
				        if (!match)
				          break;
				        count = processLexeme(value.substr(index, match.index - index), match[0]);
				        index = match.index + count;
				      }
				      processLexeme(value.substr(index));
				      for(var current = top; current.parent; current = current.parent) { // close dangling modes
				        if (current.className) {
				          result += '</span>';
				        }
				      };
				      return {
				        relevance: relevance,
				        value: result,
				        language: name,
				        top: top
				      };
				    } catch (e) {
				      if (e.message.indexOf('Illegal') != -1) {
				        return {
				          relevance: 0,
				          value: escape(value)
				        };
				      } else {
				        throw e;
				      }
				    }
				  }

				  /*
				  Highlighting with language detection. Accepts a string with the code to
				  highlight. Returns an object with the following properties:

				  - language (detected language)
				  - relevance (int)
				  - value (an HTML string with highlighting markup)
				  - second_best (object with the same structure for second-best heuristically
				    detected language, may be absent)

				  */
				  function highlightAuto(text, languageSubset) {
				    languageSubset = languageSubset || options.languages || Object.keys(languages);
				    var result = {
				      relevance: 0,
				      value: escape(text)
				    };
				    var second_best = result;
				    languageSubset.forEach(function(name) {
				      if (!getLanguage(name)) {
				        return;
				      }
				      var current = highlight(name, text, false);
				      current.language = name;
				      if (current.relevance > second_best.relevance) {
				        second_best = current;
				      }
				      if (current.relevance > result.relevance) {
				        second_best = result;
				        result = current;
				      }
				    });
				    if (second_best.language) {
				      result.second_best = second_best;
				    }
				    return result;
				  }

				  /*
				  Post-processing of the highlighted markup:

				  - replace TABs with something more useful
				  - replace real line-breaks with '<br>' for non-pre containers

				  */
				  function fixMarkup(value) {
				    if (options.tabReplace) {
				      value = value.replace(/^((<[^>]+>|\t)+)/gm, function(match, p1, offset, s) {
				        return p1.replace(/\t/g, options.tabReplace);
				      });
				    }
				    if (options.useBR) {
				      value = value.replace(/\n/g, '<br>');
				    }
				    return value;
				  }

				  /*
				  Applies highlighting to a DOM node containing code. Accepts a DOM node and
				  two optional parameters for fixMarkup.
				  */
				  function highlightBlock(block) {
				    var language = blockLanguage(block);
				    if (/no(-?)highlight/.test(language))
				        return;

				    var node;
				    if (options.useBR) {
				      node = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');
				      node.innerHTML = block.innerHTML.replace(/\n/g, '').replace(/<br[ \/]*>/g, '\n');
				    } else {
				      node = block;
				    }
				    var text = node.textContent;
				    var result = language ? highlight(language, text, true) : highlightAuto(text);

				    var originalStream = nodeStream(node);
				    if (originalStream.length) {
				      var resultNode = document.createElementNS('http://www.w3.org/1999/xhtml', 'div');
				      resultNode.innerHTML = result.value;
				      result.value = mergeStreams(originalStream, nodeStream(resultNode), text);
				    }
				    result.value = fixMarkup(result.value);

				    block.innerHTML = result.value;
				    block.className += ' hljs ' + (!language && result.language || '');
				    block.result = {
				      language: result.language,
				      re: result.relevance
				    };
				    if (result.second_best) {
				      block.second_best = {
				        language: result.second_best.language,
				        re: result.second_best.relevance
				      };
				    }
				  }

				  var options = {
				    classPrefix: 'hljs-',
				    tabReplace: null,
				    useBR: false,
				    languages: undefined
				  };

				  /*
				  Updates highlight.js global options with values passed in the form of an object
				  */
				  function configure(user_options) {
				    options = inherit(options, user_options);
				  }

				  /*
				  Applies highlighting to all <pre><code>..</code></pre> blocks on a page.
				  */
				  function initHighlighting() {
				    if (initHighlighting.called)
				      return;
				    initHighlighting.called = true;

				    var blocks = document.querySelectorAll('pre code');
				    Array.prototype.forEach.call(blocks, highlightBlock);
				  }

				  /*
				  Attaches highlighting to the page load event.
				  */
				  function initHighlightingOnLoad() {
				    addEventListener('DOMContentLoaded', initHighlighting, false);
				    addEventListener('load', initHighlighting, false);
				  }

				  var languages = {};
				  var aliases = {};

				  function registerLanguage(name, language) {
				    var lang = languages[name] = language(this);
				    if (lang.aliases) {
				      lang.aliases.forEach(function(alias) {aliases[alias] = name;});
				    }
				  }

				  function listLanguages() {
				    return Object.keys(languages);
				  }

				  function getLanguage(name) {
				    return languages[name] || languages[aliases[name]];
				  }

				  /* Interface definition */

				  this.highlight = highlight;
				  this.highlightAuto = highlightAuto;
				  this.fixMarkup = fixMarkup;
				  this.highlightBlock = highlightBlock;
				  this.configure = configure;
				  this.initHighlighting = initHighlighting;
				  this.initHighlightingOnLoad = initHighlightingOnLoad;
				  this.registerLanguage = registerLanguage;
				  this.listLanguages = listLanguages;
				  this.getLanguage = getLanguage;
				  this.inherit = inherit;

				  // Common regexps
				  this.IDENT_RE = '[a-zA-Z][a-zA-Z0-9_]*';
				  this.UNDERSCORE_IDENT_RE = '[a-zA-Z_][a-zA-Z0-9_]*';
				  this.NUMBER_RE = '\\b\\d+(\\.\\d+)?';
				  this.C_NUMBER_RE = '(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)'; // 0x..., 0..., decimal, float
				  this.BINARY_NUMBER_RE = '\\b(0b[01]+)'; // 0b...
				  this.RE_STARTERS_RE = '!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~';

				  // Common modes
				  this.BACKSLASH_ESCAPE = {
				    begin: '\\\\[\\s\\S]', relevance: 0
				  };
				  this.APOS_STRING_MODE = {
				    className: 'string',
				    begin: '\'', end: '\'',
				    illegal: '\\n',
				    contains: [this.BACKSLASH_ESCAPE]
				  };
				  this.QUOTE_STRING_MODE = {
				    className: 'string',
				    begin: '"', end: '"',
				    illegal: '\\n',
				    contains: [this.BACKSLASH_ESCAPE]
				  };
				  this.PHRASAL_WORDS_MODE = {
				    begin: /\b(a|an|the|are|I|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such)\b/
				  };
				  this.C_LINE_COMMENT_MODE = {
				    className: 'comment',
				    begin: '//', end: '$',
				    contains: [this.PHRASAL_WORDS_MODE]
				  };
				  this.C_BLOCK_COMMENT_MODE = {
				    className: 'comment',
				    begin: '/\\*', end: '\\*/',
				    contains: [this.PHRASAL_WORDS_MODE]
				  };
				  this.HASH_COMMENT_MODE = {
				    className: 'comment',
				    begin: '#', end: '$',
				    contains: [this.PHRASAL_WORDS_MODE]
				  };
				  this.NUMBER_MODE = {
				    className: 'number',
				    begin: this.NUMBER_RE,
				    relevance: 0
				  };
				  this.C_NUMBER_MODE = {
				    className: 'number',
				    begin: this.C_NUMBER_RE,
				    relevance: 0
				  };
				  this.BINARY_NUMBER_MODE = {
				    className: 'number',
				    begin: this.BINARY_NUMBER_RE,
				    relevance: 0
				  };
				  this.CSS_NUMBER_MODE = {
				    className: 'number',
				    begin: this.NUMBER_RE + '(' +
				      '%|em|ex|ch|rem'  +
				      '|vw|vh|vmin|vmax' +
				      '|cm|mm|in|pt|pc|px' +
				      '|deg|grad|rad|turn' +
				      '|s|ms' +
				      '|Hz|kHz' +
				      '|dpi|dpcm|dppx' +
				      ')?',
				    relevance: 0
				  };
				  this.REGEXP_MODE = {
				    className: 'regexp',
				    begin: /\//, end: /\/[gim]*/,
				    illegal: /\n/,
				    contains: [
				      this.BACKSLASH_ESCAPE,
				      {
				        begin: /\[/, end: /\]/,
				        relevance: 0,
				        contains: [this.BACKSLASH_ESCAPE]
				      }
				    ]
				  };
				  this.TITLE_MODE = {
				    className: 'title',
				    begin: this.IDENT_RE,
				    relevance: 0
				  };
				  this.UNDERSCORE_TITLE_MODE = {
				    className: 'title',
				    begin: this.UNDERSCORE_IDENT_RE,
				    relevance: 0
				  };
				};
				module.exports = Highlight;
			},
			"languages": {
				"javascript.js": function (exports, module, require) {
					module.exports = function(hljs) {
					  return {
					    aliases: ['js'],
					    keywords: {
					      keyword:
					        'in if for while finally var new function do return void else break catch ' +
					        'instanceof with throw case default try this switch continue typeof delete ' +
					        'let yield const class',
					      literal:
					        'true false null undefined NaN Infinity',
					      built_in:
					        'eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent ' +
					        'encodeURI encodeURIComponent escape unescape Object Function Boolean Error ' +
					        'EvalError InternalError RangeError ReferenceError StopIteration SyntaxError ' +
					        'TypeError URIError Number Math Date String RegExp Array Float32Array ' +
					        'Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array ' +
					        'Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require ' +
					        'module console window document'
					    },
					    contains: [
					      {
					        className: 'pi',
					        begin: /^\s*('|")use strict('|")/,
					        relevance: 10
					      },
					      hljs.APOS_STRING_MODE,
					      hljs.QUOTE_STRING_MODE,
					      hljs.C_LINE_COMMENT_MODE,
					      hljs.C_BLOCK_COMMENT_MODE,
					      hljs.C_NUMBER_MODE,
					      { // "value" container
					        begin: '(' + hljs.RE_STARTERS_RE + '|\\b(case|return|throw)\\b)\\s*',
					        keywords: 'return throw case',
					        contains: [
					          hljs.C_LINE_COMMENT_MODE,
					          hljs.C_BLOCK_COMMENT_MODE,
					          hljs.REGEXP_MODE,
					          { // E4X
					            begin: /</, end: />;/,
					            relevance: 0,
					            subLanguage: 'xml'
					          }
					        ],
					        relevance: 0
					      },
					      {
					        className: 'function',
					        beginKeywords: 'function', end: /\{/, excludeEnd: true,
					        contains: [
					          hljs.inherit(hljs.TITLE_MODE, {begin: /[A-Za-z$_][0-9A-Za-z$_]*/}),
					          {
					            className: 'params',
					            begin: /\(/, end: /\)/,
					            contains: [
					              hljs.C_LINE_COMMENT_MODE,
					              hljs.C_BLOCK_COMMENT_MODE
					            ],
					            illegal: /["'\(]/
					          }
					        ],
					        illegal: /\[|%/
					      },
					      {
					        begin: /\$[(.]/ // relevance booster for a pattern common to JS libs: `$(something)` and `$.something`
					      },
					      {
					        begin: '\\.' + hljs.IDENT_RE, relevance: 0 // hack: prevents detection of keywords after dots
					      }
					    ]
					  };
					};
				}
			}
		}
	},
	"memoizee": {
		"lib": {
			"configure-map.js": function (exports, module, require) {
				'use strict';

				var customError      = require('es5-ext/error/custom')
				  , defineLength     = require('es5-ext/function/_define-length')
				  , d                = require('d')
				  , ee               = require('event-emitter').methods
				  , resolveResolve   = require('./resolve-resolve')
				  , resolveNormalize = require('./resolve-normalize')

				  , apply = Function.prototype.apply, call = Function.prototype.call
				  , create = Object.create, hasOwnProperty = Object.prototype.hasOwnProperty
				  , defineProperties = Object.defineProperties
				  , on = ee.on, emit = ee.emit;

				module.exports = function (original, length, options) {
					var cache = create(null), conf, memLength, get, set, del, clear, extDel, normalizer
					  , getListeners, setListeners, deleteListeners, memoized, resolve;
					if (length !== false) memLength = length;
					else if (isNaN(original.length)) memLength = 1;
					else memLength = original.length;

					if (options.normalizer) {
						normalizer = resolveNormalize(options.normalizer);
						get = normalizer.get;
						set = normalizer.set;
						del = normalizer.delete;
						clear = normalizer.clear;
					}
					if (options.resolvers != null) resolve = resolveResolve(options.resolvers);

					if (get) {
						memoized = defineLength(function (arg) {
							var id, result, args = arguments;
							if (resolve) args = resolve(args);
							id = get(args);
							if (id !== null) {
								if (hasOwnProperty.call(cache, id)) {
									if (getListeners) conf.emit('get', id, args, this);
									return cache[id];
								}
							}
							if (args.length === 1) result = call.call(original, this, args[0]);
							else result = apply.call(original, this, args);
							if (id === null) {
								id = get(args);
								if (id !== null) throw customError("Circular invocation", 'CIRCULAR_INVOCATION');
								id = set(args);
							} else if (hasOwnProperty.call(cache, id)) {
								throw customError("Circular invocation", 'CIRCULAR_INVOCATION');
							}
							cache[id] = result;
							if (setListeners) conf.emit('set', id);
							return result;
						}, memLength);
					} else if (length === 0) {
						memoized = function () {
							var result;
							if (hasOwnProperty.call(cache, 'data')) {
								if (getListeners) conf.emit('get', 'data', arguments, this);
								return cache.data;
							}
							if (!arguments.length) result = call.call(original, this);
							else result = apply.call(original, this, arguments);
							if (hasOwnProperty.call(cache, 'data')) {
								throw customError("Circular invocation", 'CIRCULAR_INVOCATION');
							}
							cache.data = result;
							if (setListeners) conf.emit('set', 'data');
							return result;
						};
					} else {
						memoized = function (arg) {
							var result, args = arguments, id;
							if (resolve) args = resolve(arguments);
							id = String(args[0]);
							if (hasOwnProperty.call(cache, id)) {
								if (getListeners) conf.emit('get', id, args, this);
								return cache[id];
							}
							if (args.length === 1) result = call.call(original, this, args[0]);
							else result = apply.call(original, this, args);
							if (hasOwnProperty.call(cache, id)) {
								throw customError("Circular invocation", 'CIRCULAR_INVOCATION');
							}
							cache[id] = result;
							if (setListeners) conf.emit('set', id);
							return result;
						};
					}
					conf = {
						original: original,
						memoized: memoized,
						get: function (args) {
							if (resolve) args = resolve(args);
							if (get) return get(args);
							return String(args[0]);
						},
						has: function (id) { return hasOwnProperty.call(cache, id); },
						delete: function (id) {
							var result;
							if (!hasOwnProperty.call(cache, id)) return;
							if (del) del(id);
							result = cache[id];
							delete cache[id];
							if (deleteListeners) conf.emit('delete', id, result);
						},
						clear: function () {
							var oldCache = cache;
							if (clear) clear();
							cache = create(null);
							conf.emit('clear', oldCache);
						},
						on: function (type, listener) {
							if (type === 'get') getListeners = true;
							else if (type === 'set') setListeners = true;
							else if (type === 'delete') deleteListeners = true;
							return on.call(this, type, listener);
						},
						emit: emit,
						updateEnv: function () { original = conf.original; }
					};
					if (get) {
						extDel = defineLength(function (arg) {
							var id, args = arguments;
							if (resolve) args = resolve(args);
							id = get(args);
							if (id === null) return;
							conf.delete(id);
						}, memLength);
					} else if (length === 0) {
						extDel = function () { return conf.delete('data'); };
					} else {
						extDel = function (arg) {
							if (resolve) arg = resolve(arguments)[0];
							return conf.delete(arg);
						};
					}
					defineProperties(memoized, {
						__memoized__: d(true),
						delete: d(extDel),
						clear: d(conf.clear)
					});
					return conf;
				};
			},
			"registered-extensions.js": function (exports, module, require) {
				'use strict';
			},
			"resolve-length.js": function (exports, module, require) {
				'use strict';

				var toPosInt = require('es5-ext/number/to-pos-integer');

				module.exports = function (optsLength, fnLength, isAsync) {
					var length;
					if (isNaN(optsLength)) {
						length = fnLength;
						if (!(length >= 0)) return 1;
						if (isAsync && length) return length - 1;
						return length;
					}
					if (optsLength === false) return false;
					return toPosInt(optsLength);
				};
			},
			"resolve-normalize.js": function (exports, module, require) {
				'use strict';

				var callable = require('es5-ext/object/valid-callable');

				module.exports = function (userNormalizer) {
					var normalizer;
					if (typeof userNormalizer === 'function') return { set: userNormalizer, get: userNormalizer };
					normalizer = { get: callable(userNormalizer.get) };
					if (userNormalizer.set !== undefined) {
						normalizer.set = callable(userNormalizer.set);
						normalizer.delete = callable(userNormalizer.delete);
						normalizer.clear = callable(userNormalizer.clear);
						return normalizer;
					}
					normalizer.set = normalizer.get;
					return normalizer;
				};
			},
			"resolve-resolve.js": function (exports, module, require) {
				'use strict';

				var toArray  = require('es5-ext/array/to-array')
				  , callable = require('es5-ext/object/valid-callable')

				  , slice = Array.prototype.slice
				  , resolveArgs;

				resolveArgs = function (args) {
					return this.map(function (r, i) {
						return r ? r(args[i]) : args[i];
					}).concat(slice.call(args, this.length));
				};

				module.exports = function (resolvers) {
					resolvers = toArray(resolvers);
					resolvers.forEach(function (r) {
						if (r != null) callable(r);
					});
					return resolveArgs.bind(resolvers);
				};
			}
		},
		"normalizers": {
			"get-1.js": function (exports, module, require) {
				'use strict';

				var indexOf = require('es5-ext/array/#/e-index-of');

				module.exports = function () {
					var lastId = 0, argsMap = [], cache = [];
					return {
						get: function (args) {
							var index = indexOf.call(argsMap, args[0]);
							return (index === -1) ? null : cache[index];
						},
						set: function (args) {
							argsMap.push(args[0]);
							cache.push(++lastId);
							return lastId;
						},
						delete: function (id) {
							var index = indexOf.call(cache, id);
							if (index !== -1) {
								argsMap.splice(index, 1);
								cache.splice(index, 1);
							}
						},
						clear: function () {
							argsMap = [];
							cache = [];
						}
					};
				};
			}
		},
		"plain.js": function (exports, module, require) {
			'use strict';

			var callable      = require('es5-ext/object/valid-callable')
			  , forEach       = require('es5-ext/object/for-each')
			  , extensions    = require('./lib/registered-extensions')
			  , configure     = require('./lib/configure-map')
			  , resolveLength = require('./lib/resolve-length')

			  , hasOwnProperty = Object.prototype.hasOwnProperty;

			module.exports = function self(fn/*, options */) {
				var options, length, conf;

				callable(fn);
				options = Object(arguments[1]);

				// Do not memoize already memoized function
				if (hasOwnProperty.call(fn, '__memoized__') && !options.force) return fn;

				// Resolve length;
				length = resolveLength(options.length, fn.length, options.async && extensions.async);

				// Configure cache map
				conf = configure(fn, length, options);

				// Bind eventual extensions
				forEach(extensions, function (fn, name) {
					if (options[name]) fn(options[name], conf, options);
				});

				if (self.__profiler__) self.__profiler__(conf);

				conf.updateEnv();
				return conf.memoized;
			};
		}
	},
	"querystring": {
		"decode.js": function (exports, module, require) {
			// Copyright Joyent, Inc. and other Node contributors.
			//
			// Permission is hereby granted, free of charge, to any person obtaining a
			// copy of this software and associated documentation files (the
			// "Software"), to deal in the Software without restriction, including
			// without limitation the rights to use, copy, modify, merge, publish,
			// distribute, sublicense, and/or sell copies of the Software, and to permit
			// persons to whom the Software is furnished to do so, subject to the
			// following conditions:
			//
			// The above copyright notice and this permission notice shall be included
			// in all copies or substantial portions of the Software.
			//
			// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
			// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
			// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
			// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
			// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
			// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
			// USE OR OTHER DEALINGS IN THE SOFTWARE.

			'use strict';

			// If obj.hasOwnProperty has been overridden, then calling
			// obj.hasOwnProperty(prop) will break.
			// See: https://github.com/joyent/node/issues/1707
			function hasOwnProperty(obj, prop) {
			  return Object.prototype.hasOwnProperty.call(obj, prop);
			}

			module.exports = function(qs, sep, eq, options) {
			  sep = sep || '&';
			  eq = eq || '=';
			  var obj = {};

			  if (typeof qs !== 'string' || qs.length === 0) {
			    return obj;
			  }

			  var regexp = /\+/g;
			  qs = qs.split(sep);

			  var maxKeys = 1000;
			  if (options && typeof options.maxKeys === 'number') {
			    maxKeys = options.maxKeys;
			  }

			  var len = qs.length;
			  // maxKeys <= 0 means that we should not limit keys count
			  if (maxKeys > 0 && len > maxKeys) {
			    len = maxKeys;
			  }

			  for (var i = 0; i < len; ++i) {
			    var x = qs[i].replace(regexp, '%20'),
			        idx = x.indexOf(eq),
			        kstr, vstr, k, v;

			    if (idx >= 0) {
			      kstr = x.substr(0, idx);
			      vstr = x.substr(idx + 1);
			    } else {
			      kstr = x;
			      vstr = '';
			    }

			    k = decodeURIComponent(kstr);
			    v = decodeURIComponent(vstr);

			    if (!hasOwnProperty(obj, k)) {
			      obj[k] = v;
			    } else if (Array.isArray(obj[k])) {
			      obj[k].push(v);
			    } else {
			      obj[k] = [obj[k], v];
			    }
			  }

			  return obj;
			};
		},
		"encode.js": function (exports, module, require) {
			// Copyright Joyent, Inc. and other Node contributors.
			//
			// Permission is hereby granted, free of charge, to any person obtaining a
			// copy of this software and associated documentation files (the
			// "Software"), to deal in the Software without restriction, including
			// without limitation the rights to use, copy, modify, merge, publish,
			// distribute, sublicense, and/or sell copies of the Software, and to permit
			// persons to whom the Software is furnished to do so, subject to the
			// following conditions:
			//
			// The above copyright notice and this permission notice shall be included
			// in all copies or substantial portions of the Software.
			//
			// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
			// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
			// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
			// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
			// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
			// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
			// USE OR OTHER DEALINGS IN THE SOFTWARE.

			'use strict';

			var stringifyPrimitive = function(v) {
			  switch (typeof v) {
			    case 'string':
			      return v;

			    case 'boolean':
			      return v ? 'true' : 'false';

			    case 'number':
			      return isFinite(v) ? v : '';

			    default:
			      return '';
			  }
			};

			module.exports = function(obj, sep, eq, name) {
			  sep = sep || '&';
			  eq = eq || '=';
			  if (obj === null) {
			    obj = undefined;
			  }

			  if (typeof obj === 'object') {
			    return Object.keys(obj).map(function(k) {
			      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;
			      if (Array.isArray(obj[k])) {
			        return obj[k].map(function(v) {
			          return ks + encodeURIComponent(stringifyPrimitive(v));
			        }).join(sep);
			      } else {
			        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));
			      }
			    }).join(sep);

			  }

			  if (!name) return '';
			  return encodeURIComponent(stringifyPrimitive(name)) + eq +
			         encodeURIComponent(stringifyPrimitive(obj));
			};
		}
	},
	"slides": {
		"client": {
			"index.js": function (exports, module, require) {
				'use strict';
				
				Error.stackTraceLimit = Infinity;
				
				var env, root, plugins, bespoke;
				
				try {
					env = require('../env');
				} catch (e) {
					if (e.code !== 'MODULE_NOT_FOUND') throw e;
					env = {};
				}
				root = env.root || '/';
				
				// Inject slides
				document.body.appendChild(document.createElement('article')).innerHTML
					= require('../slides')
						.replace(/ src="\/(?!\/)/g, ' src="' + root);
				
				// Syntax highlight
				require('./lib/highlight');
				
				// Bespoke engine + necessary plugins
				bespoke = require('bespoke');
				plugins = [
					require('bespoke-classes')(),
					require('bespoke-history')(env.root || true),
					require('bespoke-keys')(),
					require('bespoke-notes')(),
					require('bespoke-progress')(),
					require('bespoke-substeps')(),
					require('bespoke-scale')(),
					require('bespoke-touch')()
				];
				
				if (env.sync) {
					plugins.push(require('bespoke-sync/client')({ log: true, ssePath: root + 'sse-slides/',
						xhrPath: root + 'slide/' }));
				}
				
				// Intialize slides engine
				window.deck = bespoke.from('article', plugins);
				
				// Preload images
				require('./lib/preload-images');
			},
			"lib": {
				"highlight.js": function (exports, module, require) {
					'use strict';
					
					var Highlight = require('highlight.js/lib/highlight')
					  , hljs = new Highlight();
					
					hljs.registerLanguage('javascript',
						require('highlight.js/lib/languages/javascript'));
					
					hljs.initHighlighting();
				},
				"preload-images.js": function (exports, module, require) {
					'use strict';
					
					var forEach = Array.prototype.forEach;
					
					forEach.call(document.styleSheets, function (sheet) {
						if (!sheet.rules) return;
						forEach.call(sheet.rules, function (rule) {
							var matches, image;
							if (rule.style && rule.style.backgroundImage) {
								matches = rule.style.backgroundImage.match(/url\(([\0-(\*-\uffff]*)\)/);
								if (matches) {
									image = new Image();
									image.src = matches[1];
								}
							}
						});
					});
				}
			}
		},
		"slides.html": function (exports, module, require) {
			module.exports = "<section>\r\n    <div class=\"content\">\r\n        <h1>AngularJS <p></p></h1>\r\n        <h1>Overview</h1>\r\n        <div>\r\n            <img src=\"gdg-cochabamba.jpg\" width=\"200\">\r\n        </div>\r\n        <p class=\"footer\">Oct 2016 - Cochabamba, Bolivia</p>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"angularjs\">\r\n    <div class=\"content\">\r\n        <h1>Why AngularJS?</h1>\r\n\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <h2>Simplicity</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"4\">\r\n            <h2>MVC done right</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"5\">\r\n            <h2>Data models are JavaScripts objects(POJOs)</h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"angularjs-1\">\r\n\t<div class=\"content\">\r\n\t\t<h1>Why AngularJS?</h1>\r\n\r\n\t\t<div class=\"substep\" data-order=\"2\">\r\n\t\t\t<h2>Two way data binding</h2>\r\n\t\t</div>\r\n        <div class=\"substep\" data-order=\"3\">\r\n            <h2>Directives</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"4\">\r\n            <h2>Form validation</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"5\">\r\n            <h2>Animations</h2>\r\n        </div>\r\n\t</div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"angularjs-2\">\r\n    <div class=\"content\">\r\n        <h1>Why AngularJS</h1>\r\n\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <h2>i18n</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"3\">\r\n            <h2>Routing</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"4\">\r\n            <h2>Filters</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"5\">\r\n            <h2>Testing</h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"angularjs-3\">\r\n    <div class=\"content\">\r\n        <h1>AngularJS vs others</h1>\r\n\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <img src=\"angularjs-interest.jpg\" height=\"400\">\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <a href=\"http://goo.gl/IEN0ES\">http://goo.gl/IEN0ES</a>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"fast-development\">\r\n    <div class=\"content\">\r\n        <h1>How to start with AngularJS?</h1>\r\n        <div data-order=\"1\">\r\n            <img src=\"stopwatch.png\" height=\"300\">\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"yeoman-1\">\r\n    <div class=\"content\">\r\n        <h1>Yeoman</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <img src=\"yeoman.png\" height=\"300\">\r\n        </div>\r\n    </div>\r\n</section>\r\n<section data-bespoke-id=\"yeoman-2\">\r\n    <div class=\"content\">\r\n        <h1>Yeoman</h1>\r\n\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h2>Kickstart new projects</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <h2>Best practices</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"3\">\r\n            <h2>Tools to stay productive</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"4\">\r\n            <h2>No more manual setup</h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"yeoman-3\">\r\n    <div class=\"content\">\r\n        <h1>Yeoman</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h2>No headaches</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <img src=\"freddy.png\" height=\"300\"/></a>\r\n            <h2>Open Source community</h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"yeoman-tools-yo\">\r\n    <div class=\"content\">\r\n        <h1>Yeoman Tools</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <img src=\"yo.png\" height=\"200\"/></a>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <h2>Write your build configuration</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <h2>Write tasks and package manager dependences</h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"yeoman-tools-yo-1\">\r\n    <div class=\"content\">\r\n        <h1>Yeoman Tools - Yo</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h2>Scaffolds out a new application</h2>\r\n            <img src=\"scaffolding-example.jpeg\" height=\"350\"/></a>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"yeoman-tools-grunt\">\r\n    <div class=\"content\">\r\n        <h1>Yeoman Tools</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h2>Grunt</h2>\r\n            <img src=\"grunt.png\" height=\"200\"/></a>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <h2>The base of the build system</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"3\">\r\n            <h2>Allows preview and test your project</h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"yeoman-tools-bower\">\r\n    <div class=\"content\">\r\n        <h1>Yeoman Tools</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h2>Bower</h2>\r\n            <img src=\"bower.png\" height=\"200\"/></a>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <h2>Package Manager, dependency management</h2>\r\n            <h2>No manual download and scripts management</h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"yeoman-tools-all\">\r\n    <div class=\"content\">\r\n        <h1>Yeoman Tools</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h2>How it works?</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <img src=\"workflow-yeoman.jpg\" height=\"300\"/></a>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"angular-fullstack-1\">\r\n    <div class=\"content\">\r\n        <h1>AngularJS Full-Stack generator</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h2>Yeoman generator for creating MEAN stack applications, using MongoDB, Express, AngularJS, and Node</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h2>Lets you quickly set up a project following best practices</h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"angular-fullstack-2\">\r\n    <div class=\"content\">\r\n        <h1>AngularJS Full-Stack generator</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h1>Prerequisites</h1>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <h2>Install Git</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"3\">\r\n            <h2>Install NodeJS</h2>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n\r\n<section data-bespoke-id=\"angular-fullstack-3\">\r\n    <div class=\"content\">\r\n        <h1>AngularJS Full-Stack generator</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h1>Prerequisites</h1>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <pre>\r\n                <code>\r\n                    $ npm install -g yo\r\n                    $ npm install -g grunt-cli\r\n                    $ npm install -g bower\r\n                    $ npm install -g generator-angular-fullstack\r\n                    $ mkdir my-project && cd $_\r\n                    $ yo angular-fullstack\r\n                </code>\r\n            </pre>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"angular-fullstack-4\">\r\n    <div class=\"content\">\r\n        <h1>AngularJS Full-Stack generator</h1>\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h2>You can use different generators to start coding</h2>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"2\">\r\n            <pre>\r\n                <code>\r\n                    $ yo angular-fullstack:route my-route\r\n                    $ yo angular-fullstack:controller my-controller\r\n                    $ yo angular-fullstack:service my-service\r\n                    $ yo angular-fullstack:directive my-directive\r\n                </code>\r\n            </pre>\r\n        </div>\r\n        <div class=\"substep\" data-order=\"3\">\r\n            <h3>\r\n                <a href=\"https://github.com/DaftMonk/generator-angular-fullstack\">\r\n                    https://github.com/DaftMonk/generator-angular-fullstack\r\n                </a>\r\n            </h3>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"demo\">\r\n    <div class=\"content\">\r\n        <img src=\"keep-calm.png\" height=\"300\">\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"questions\">\r\n    <div class=\"content\">\r\n        <div class=\"substep\" data-order=\"1\">\r\n            <h1>Questions?</h1>\r\n            <img src=\"question-mark.png\" height=\"350\" />\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section data-bespoke-id=\"thank-you\">\r\n\t<div class=\"content\">\r\n\t\t<h1>Thank you!</h1>\r\n\t\t<h2>Luis Aviles</h2>\r\n\t\t<p class=\"links\">\r\n\t\t\t<a href=\"https://github.com/luixaviles\"><img src=\"github.png\" height=\"100\" /></a>\r\n\t\t</p>\r\n        <p class=\"links\">\r\n            <a href=\"https://github.com/luixaviles\">https://github.com/luixaviles</a>\r\n        </p>\r\n        <p class=\"links\">\r\n            <a href=\"https://twitter.com/luixaviles\"><img src=\"twitter.png\" height=\"100\" /></a>\r\n        </p>\r\n        <p class=\"links\">\r\n            <a href=\"https://twitter.com/luixaviles\">https://twitter.com/luixaviles</a>\r\n        </p>\r\n\t</div>\r\n\t<aside></aside>\r\n</section>\r\n";
		}
	},
	"webmake": {
		"lib": {
			"browser": {
				"load-css.js": function (exports, module, require) {
					'use strict';

					var style, add;
					if (document.createStyleSheet) {
						// IE
						if (document.styleSheets.length > 29) {
							style = document.styleSheets[document.styleSheets.length - 1];
						} else {
							style = document.createStyleSheet();
						}
						add = function (css) { style.cssText += css; };
					} else {
						style = document.getElementsByTagName("head")[0]
							.appendChild(document.createElement("style"));
						style.setAttribute("type", "text/css");
						add = function (css) { style.appendChild(document.createTextNode(css)); };
					}
					module.exports = add;
				}
			}
		}
	}
})("slides/client/index");
